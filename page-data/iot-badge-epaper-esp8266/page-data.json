{"componentChunkName":"component---src-templates-blog-template-js","path":"/iot-badge-epaper-esp8266","result":{"data":{"site":{"siteMetadata":{"title":"mnkytypwrtr"}},"markdownRemark":{"html":"<blockquote>\n<p><strong><em>Hello, my name is badgy! I’m an E-Paper IoT badge with a 5-way joystick!</em></strong></p>\n</blockquote>\n<p>I’ve recently come across some e-paper display modules and thought they were the coolest thing ever. For those not familiar with e-paper, it’s a display technology similar to what’s used in e-readers (such as the Amazon Kindle).</p>\n<p><figure class=\"md-figure\"><img src=\"/assets/2017-12-29-iot-badge-epaper-esp8266/epaper.gif\"><figcaption>How E-Paper Works</figcaption></figure></p>\n<p>These displays don’t require any power to stay on, it’s only when you need to update the image do you need to give it power. The image on the left shows a high-level concept diagram of how these displays work.</p>\n<p>For battery powered IoT devices, there are many advantages to using these type of displays; you can pretty much shut off everything to preserve battery life and wake up only when you need to perform some action, all while displaying pertinent information to the user.</p>\n<p>So what can you do with an ESP8266, a battery, some buttons, and an E-Paper display?</p>\n<p><figure class=\"md-figure\"><img src=\"/assets/2017-12-29-iot-badge-epaper-esp8266/iot-remote.jpg\" title=\"E-Paper IoT Remote\"><figcaption>1. Smart Home Remote (Note the 5-way switch, up/down/left/right/center)</figcaption></figure></p>\n<p><figure class=\"md-figure\"><img src=\"/assets/2017-12-29-iot-badge-epaper-esp8266/weather.jpg\" title=\"Weather Dashboard\"><figcaption>2. Weather Dashboard</figcaption></figure></p>\n<p><figure class=\"md-figure\"><img src=\"/assets/2017-12-29-iot-badge-epaper-esp8266/wifi-manager.jpg\" title=\"Wi-Fi Manager\"><figcaption>3. Wi-Fi Manager</figcaption></figure></p>\n<p><figure class=\"md-figure\"><img src=\"/assets/2017-12-29-iot-badge-epaper-esp8266/notifications.jpg\" title=\"Display Notifications\"><figcaption>4. Display Notifications (IFTTT or other integrations)</figcaption></figure></p>\n<p><figure class=\"md-figure\"><img src=\"/assets/2017-12-29-iot-badge-epaper-esp8266/name-tag.jpg\" title=\"Name Tag\"><figcaption>5. Name Tag</figcaption></figure></p>\n<p>…and pretty much anything you can think of. It’s a tiny battery powered computer with WiFi connectivity!</p>\n<h2>Building the badge</h2>\n<p>These e-paper displays support the SPI protocol, so you’ll need to connect the right wires to the right pins on your microcontroller (the ESP8266 in our case) to drive the display. The display also requires a driving circuit to work, of which you can either get an adapter board for , or build your own. I decided on the latter, as the documentation was sufficient, and I didn’t want messy wires.</p>\n<p><figure class=\"md-figure\"><img src=\"/assets/2017-12-29-iot-badge-epaper-esp8266/driver-circuit.png\" title=\"Driver Circuit\"><figcaption>bunch of diodes, mosfets, and capacitors</figcaption></figure></p>\n<p>As with many of my recent projects, I usually skip the breadboarding phase and jump straight to designing the PCB on <a href=\"https://kicad.org/\">KiCad</a> (hurrrray for open source software!). While building the driver circuit, I also threw in a coin cell battery + USB charger to make our little badge portable.</p>\n<p><figure class=\"md-figure\"><img src=\"/assets/2017-12-29-iot-badge-epaper-esp8266/schematic.png\" title=\"KiCad Schematic\"><figcaption>KiCad Schematic</figcaption></figure></p>\n<p><figure class=\"md-figure\"><img src=\"/assets/2017-12-29-iot-badge-epaper-esp8266/pcb-render.jpg\" title=\"PCB Render\"><figcaption>The badge itself is barely larger than the display :)</figcaption></figure></p>\n<p>After double/triple/quadruple checking everything, I sent the design off to a PCB fab to have the boards made…</p>\n<p>The datasheet also thoroughly describes the timing and signals over SPI on how to control the display, but luckily for us, GitHub user <a href=\"https://github.com/ZinggJM\">ZinggJM</a> created an Arduino library that abstracts all of that away :)</p>\n<p><a href=\"https://github.com/ZinggJM/GxEPD\">https://github.com/ZinggJM/GxEPD</a></p>\n<p>It also leverages the Adafruit-GFX library, so you can use graphics primitives to do your drawing and rendering of images/text.</p>\n<br>\n<hr>\n<br>\n<p>After 5 long days, the boards finally arrived!</p>\n<p><figure class=\"md-figure\"><img src=\"/assets/2017-12-29-iot-badge-epaper-esp8266/badgy-pcb.jpg\" title=\"Badgy PCBs!\"><figcaption>Badgy PCBs!</figcaption></figure></p>\n<p>I used 0805 footprints for most of the components so they’re easier to hand solder, though there was no getting away with the 24 pin FPC connector (drag soldering did the trick)</p>\n<p><figure class=\"md-figure\"><img src=\"/assets/2017-12-29-iot-badge-epaper-esp8266/assembled-badgy.jpg\" title=\"Assembled Badgy\"><figcaption>Yay it works! Charging up the Li-Ion LIR2450 coin cell battery</figcaption></figure></p>\n<p>Notice the empty pin headers on J1; these are connected to the TX/RX/GPIO0 pins of the ESP8266 and used for programming the chip with a USB-Serial adapter. You can either solder on pin headers and have a permanent programming connector, or you can do what I did and simply pushed pins against the pads to load the OTA firmware once, then you could always upload any new sketches over WiFi (as long as the new sketch doesn’t crash/fail).</p>\n<br>\n<hr>\n<br>\n<p>Right now, I’m doing some real world tests on battery life, but based on my calculations I should get about 40 days of battery life in deep sleep mode:</p>\n<p>120 mAh coin cell battery / (60uA regulator + 20uA deepsleep ESP8266) x 0.70 miscellaneous factors = 1050 hours ~= 43 days</p>\n<p>Switching up the battery technology may also extend this a bit further; a 500 mAh LiPo has a similar footprint, and should theoretically offer a 4X battery life.</p>\n<br>\n<hr>\n<br>\n<p>All source files are available on <a href=\"https://github.com/sqfmi/badgy\">GitHub</a>, feel free to contribute and build your own! If you want to support Badgy, you can get one today on Tindie. Enjoy :)</p>\n<p><a href=\"https://www.tindie.com/products/edit/badgy-iot-badge/\"><img src=\"/assets/2017-12-29-iot-badge-epaper-esp8266/tindie.png\"></a></p>","frontmatter":{"date":"December 29, 2017","path":"/iot-badge-epaper-esp8266","title":"Building an IoT badge with ESP8266 + E-Paper","thumbnail":"/assets/2017-12-29-iot-badge-epaper-esp8266/thumbnail.jpg","metaDescription":"Building an IoT badge with ESP8266 + E-Paper"}}},"pageContext":{}}}